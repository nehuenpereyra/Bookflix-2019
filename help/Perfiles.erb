# app/controllers/application_controller.rb
class ApplicationController < ActionController::Base
	...
		
	before_action :check_current_profile_exists
		
	# helper_method te permite usar el metodo current_profile en las vistas
	# Entonces en tus vistas o en otros controladores podes llamar a current_profile 
	# y te va a devolver el perfil seleccionado
	helper_method :current_profile
	
	private
	
	def	check_current_profile_exists
		# Si el usuario inició sesión pero no seleccionó ningún perfil
		if user_signed_in? && current_profile.blank?
			# Redirigirlo al path para seleccionar perfil
			redirect_to current_profile_path, alert: "Tenés que seleccionar un perfil antes de continue"
		end
	end
	
	def	current_profile
		Profile.find_by(id: cookies[:current_profile_id])
	end
end
​
# app/controllers/current_profile_controller.rb
class CurrentProfileController < ApplicationController
	# No queremos que chequee si el usuario seleccionó o no un perfil porque
	# acá recién lo va a seleccionar
	skip_before_action :check_current_profile_exists
	
	# Para la vista
	# GET /current_profile/new"
	def	new
		@profiles = current_user.profiles
	end
	
	# Para el submit
	# POST /current_profile
	def	create
		cookies[:current_profile_id] = params[:current_profile_id]
	end
end
​
# app/views/current_profile/new.html.erb
El form que envía el current_profile_id al create del controller
​
# config/routes.rb
...
	# Para que les genere "GET /current_profile/new" y "POST /current_profile"
	resource :current_profile, only: [:new, :create]